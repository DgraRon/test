@model IEnumerable<ServiceCatalogBGC_V2.Models.Catalog>
@using System.Security.Claims
@{
    ViewData["Title"] = "หน้าแรก";
    var isAdmin = User.IsInRole("Admin") || User.IsInRole("SuperAdmin");
}

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />

<!-- Skeleton while preparing DataTable -->
<div id="tableSkeleton" class="dt-skeleton">
    <div class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></div>
    Loading table…
</div>

<style>
    /* ===== BG Blue-White Theme ===== */
    :root {
        --bg-primary-blue: #00529e; /* สีน้ำเงินหลักของ BG */
        --bg-secondary-blue: #007bff; /* สีน้ำเงินรองสำหรับลิงก์และไฮไลท์ */
        --bg-light-gray: #f8f9fa;
        --bg-header-text: #ffffff;
    }

    /* --- Buttons --- */
    .btn-primary {
        background-color: var(--bg-primary-blue);
        border-color: var(--bg-primary-blue);
    }

        .btn-primary:hover {
            background-color: #00417e;
            border-color: #00417e;
        }

    .btn-outline-secondary {
        color: var(--bg-primary-blue);
        border-color: var(--bg-primary-blue);
    }

        .btn-outline-secondary:hover {
            background-color: var(--bg-primary-blue);
            color: white;
        }

    .dt-button { /* for "Columns View" */
        background-color: var(--bg-primary-blue) !important;
        color: white !important;
        border-color: var(--bg-primary-blue) !important;
        border-radius: .25rem;
    }

        .dt-button:hover {
            background-color: #00417e !important;
        }

    /* --- Table Header --- */
    #myTable thead {
        background-color: var(--bg-primary-blue);
        color: var(--bg-header-text);
    }

    /* --- Pagination --- */
    .page-item.active .page-link {
        background-color: var(--bg-primary-blue);
        border-color: var(--bg-primary-blue);
    }

    .page-link {
        color: var(--bg-primary-blue);
    }

    /* --- Links --- */
    a {
        color: var(--bg-secondary-blue);
    }

    /* ===== General UI Improvements ===== */
    .emails {
        line-height: 1.15;
    }

    .email-chip {
        display: inline-block;
        margin: 0 4px 4px 0;
        padding: .15rem .45rem;
        border-radius: .35rem;
        background: #e9ecef;
        font-size: .85rem;
        white-space: nowrap;
        max-width: 240px;
        overflow: hidden;
        text-overflow: ellipsis;
        vertical-align: top;
    }

    .dtr-details .email-chip {
        max-width: 100%;
    }

    .td-tight {
        padding-top: .45rem;
        padding-bottom: .45rem;
    }

    .clip-1 {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 280px;
    }

    .clip-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        max-width: 520px;
    }

    .dataTables_wrapper {
        overflow-x: auto;
    }

    #myTable tbody tr:nth-child(odd) {
        background: #fafafa;
    }

    #myTable td {
        padding-top: .45rem;
        padding-bottom: .45rem;
        vertical-align: middle;
    }
</style>

<div class="table-responsive">
    <table id="myTable" class="table table-bordered table-sm w-100 table-hover align-middle dt-init">
        <thead>
            <tr>
                <th style="width:60px;">No.</th>
                <th style="min-width:280px; max-width:500px;">Name</th>
                <th class="dt-nowrap">Type</th>
                <th>Description</th>
                <th class="dt-nowrap">Category</th>
                <th class="dt-nowrap">Status</th>
                <th class="dt-nowrap">Priority</th>
                <th class="dt-nowrap" style="min-width:100px; max-width:200px;">BU</th>
                <th class="dt-nowrap" style="min-width:100px; max-width:200px;">Dept.</th>
                <th>Business Owner</th>
                <th>Business User</th>
                <th class="dt-nowrap">IT BP/IT PM</th>
                <th class="dt-nowrap">Released date</th>
                <th class="dt-nowrap">Released Mark</th>
                <th class="dt-nowrap">Last Update</th>
                <th>Functional/SA</th>
                <th>Vendor/Developer</th>
                <th class="dt-nowrap">Deployment Type</th>
                <th>Plant/Location</th>
                <th class="clip-2 td-tight">System URL</th>
                <th class="dt-nowrap">IP/HostName</th>
                <th class="dt-nowrap">Database Endpoint</th>
                <th class="dt-nowrap">Actions</th>
            </tr>
        </thead>
        <tbody>
            @{
                var fMap = ViewBag.FunctionalMap as IDictionary<int, string> ?? new Dictionary<int, string>();
                var vMap = ViewBag.VendorMap as IDictionary<int, string> ?? new Dictionary<int, string>();
            }
            @foreach (var item in Model)
            {
                fMap.TryGetValue(item.Id, out var functionalCsv);
                vMap.TryGetValue(item.Id, out var vendorCsv);

                var functionalEmails = (functionalCsv ?? "").Split(',', StringSplitOptions.RemoveEmptyEntries).Select(e => e.Trim()).Where(e => !string.IsNullOrWhiteSpace(e)).ToList();
                var vendorEmails = (vendorCsv ?? "").Split(',', StringSplitOptions.RemoveEmptyEntries).Select(e => e.Trim()).Where(e => !string.IsNullOrWhiteSpace(e)).ToList();
                <tr>
                    <td></td> <!-- row number -->
                    <td class="clip-1 td-tight">@item.Name</td>
                    <td class="dt-nowrap">@item.Type?.Name</td>
                    <td class="clip-2 td-tight">@item.Description</td>
                    <td class="dt-nowrap">@item.Category?.Name</td>
                    <td class="dt-nowrap">@item.Status?.Name</td>
                    <td class="dt-nowrap">@item.Priority?.Name</td>
                    <td class="dt-nowrap">@item.Bu</td>
                    <td class="dt-nowrap">@item.Dept</td>
                    <td class="clip-1 td-tight">@item.BOwner</td>
                    <td class="clip-1 td-tight">@item.BUser</td>
                    <td class="dt-nowrap">@item.ITBP</td>
                    <td class="dt-nowrap">@(item.ReleasedDate?.ToString("yyyy-MM-dd") ?? "")</td>
                    <td class="dt-nowrap">@item.ReleasedMark</td>
                    <td class="dt-nowrap">@(item.LastUpdate?.ToString("yyyy-MM-dd") ?? "")</td>
                    <td class="emails">
                        @if (!functionalEmails.Any())
                        {
                            <span class="text-muted">-</span>
                        }
                        else
                        {
                            foreach (var mail in functionalEmails)
                            {
                                <span class="email-chip">@mail</span>
                            }
                        }
                    </td>
                    <td class="emails">
                        @if (!vendorEmails.Any())
                        {
                            <span class="text-muted">-</span>
                        }
                        else
                        {
                            foreach (var mail in vendorEmails)
                            {
                                <span class="email-chip">@mail</span>
                            }
                        }
                    </td>
                    <td class="dt-nowrap">@item.DeploymentType?.Name</td>
                    <td class="clip-1 td-tight">@item.Location</td>
                    <td class="clip-2 td-tight">
                        @if (!string.IsNullOrWhiteSpace(item.SURL))
                        {
                            <a href="@item.SURL" target="_blank" rel="noopener" title="@item.SURL">@item.SURL</a>
                        }
                        else
                        {
                            <span class="text-muted">-</span>
                        }
                    </td>
                    <td class="dt-nowrap">@item.Ip</td>
                    <td class="dt-nowrap">@item.DEndpoint</td>
                    <td class="text-nowrap">
                        @if (isAdmin)
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm me-1"><i class="fa-solid fa-pencil"></i> Edit</a>
                            <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline">
                                <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Delete @item.Name ?');">
                                    <i class="fa-solid fa-trash"></i> Delete
                                </button>
                            </form>
                        }
                        else
                        {
                            @:&nbsp;
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        $(function () {
            const $tbl = $('#myTable');
            const $sk  = $('#tableSkeleton');

            $tbl.one('init.dt', function () {
                $sk.hide();
                $tbl.removeClass('dt-init').addClass('dt-ready');
            });

            $tbl.on('draw.dt order.dt search.dt', function () {
                const dt = $tbl.DataTable();
                const start = dt.page.info().start;
                dt.column(0, { search:'applied', order:'applied', page:'current' }).nodes().each((cell, i) => cell.innerHTML = start + i + 1);
            });

            const table = $tbl.DataTable({
                dom:
                  "<'row mb-2 align-items-center'<'col-sm-12 col-md-6'B><'col-sm-12 col-md-6 d-flex justify-content-end'<'#smartSearch'>>>" +
                  "<'row mb-2'<'col-sm-12'l>>" +
                  "tr" +
                  "<'row mt-2'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",

                buttons: [{
                    extend: 'colvis',
                    text: '<i class="fa-solid fa-table-columns"></i> Columns View',
                    columns: ':not(.noVis)'
                }],

                responsive: false, scrollX: true, processing: true, deferRender: true,
                stateSave: true, autoWidth: true, pageLength: 10, order: [],

                columnDefs: [
                    { targets: 0, className: 'noVis', orderable: false, searchable: false },
                    {
                        targets: 22,
                        className: 'text-nowrap noVis',
                        orderable: false,
                        searchable: false,
                        visible: @isAdmin.ToString().ToLower()
                    },
                    { targets: [2,4,5,6,7,8,11,12,13,16,20,22], className: 'dt-nowrap' },
                    { targets: [3,9,10,14,15,17,18], className: 'text-ellipsis' },
                    { targets: 1, responsivePriority: 1 }, { targets: 5, responsivePriority: 2 }, { targets: 6, responsivePriority: 3 }
                ],
                language: {
                    processing: "กำลังโหลด…", lengthMenu: "แสดง _MENU_ แถวต่อหน้า", zeroRecords: "ไม่พบข้อมูล",
                    info: "แสดง _START_ ถึง _END_ จาก _TOTAL_ แถว", infoEmpty: "ไม่พบข้อมูล",
                    infoFiltered: "(กรองจากทั้งหมด _MAX_ แถว)", paginate: { previous: "ก่อนหน้า", next: "ถัดไป" }
                }
            });     

                    // === บังคับให้ Admin/SuperAdmin เห็นคอลัมน์ Actions แม้ state เก่าเคยซ่อน ===
        const IS_ADMIN = @isAdmin.ToString().ToLower();
        if (IS_ADMIN) {
          // หา index ของคอลัมน์ "Actions" จากหัวตาราง
          const ACTIONS_IDX = $tbl.find('thead th').filter(function () {
            return ($(this).text() || '').trim().toLowerCase() === 'actions';
          }).index(); // ถ้าเจอจะเป็นเลข >= 0

          if (ACTIONS_IDX >= 0) {
            table.column(ACTIONS_IDX).visible(true, false); // false = ยังไม่ recal layout เดี๋ยวค่อย adjust
            table.columns.adjust().draw(false);
          }
        }


            $('#myTable tbody').on('click', 'tr', function (e) {
                if ($(e.target).closest('a,button,input,select,label,textarea').length) return;

                const row = table.row(this);
                const rowIdx = row.index();
                const colIdxs = table.columns().indexes().toArray();

                let nameColIdx = 1;
                let titleText = $('<div>').html(table.cell(rowIdx, nameColIdx).render('display')).text().trim();
                if (!titleText) titleText = 'รายการนี้';
                $('#rowDetailModal .modal-title').text('รายละเอียดของ ' + titleText);

                let html = '';
                colIdxs.forEach(function(i){
                    

                    const th = $(table.column(i).header()).text().trim();
                    if (th === '' || /^No\.?$/i.test(th)) return;
                    let cellHtml = table.cell(rowIdx, i).render('display');
                    if (cellHtml == null || cellHtml === '') cellHtml = '<span class="text-muted">-</span>';
                    html += '<tr><th style="width:240px;">' + th + '</th><td>' + cellHtml + '</td></tr>';
                });

                $('#rowDetailTable tbody').html(html);
                new bootstrap.Modal(document.getElementById('rowDetailModal')).show();
            });

            table.columns.adjust();
            $(window).on('resize.dt', () => table.columns.adjust());
            $tbl.on('draw.dt', () => table.columns.adjust());

            $tbl.on('column-visibility.dt', function (_e, _settings, idx, state) {
                if ([0, 22].includes(idx)) return;
                const col = table.column(idx);
                $(col.header()).toggleClass('none', !state);
                $(table.cells(null, idx).nodes()).toggleClass('none', !state);
            });

            // ===== SMART SEARCH =====
            const EXACTABLE_COLS = [7, 8, 5];
            $('#smartSearch').html(`
                    <div class="d-inline-flex align-items-center gap-2 flex-wrap justify-content-end">
                        <div class="input-group input-group-sm" style="max-width:260px">
                            <span class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></span>
                            <input id="ssQuery" type="text" class="form-control" placeholder="พิมพ์คำที่ต้องการค้นหา...">
                        </div>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fa-solid fa-filter"></i> Filter
                            </button>
                            <div class="dropdown-menu p-2" style="width:320px;max-height:320px;overflow:auto">
                                <div id="ssCols" class="d-grid gap-2"></div>
                                <hr class="my-2">
                                <div class="d-grid gap-1">
                                    <button id="ssCheckAll" class="btn btn-sm btn-light" type="button">Select all</button>
                                    <button id="ssUncheckAll" class="btn btn-sm btn-light" type="button">Clear all</button>
                                </div>
                            </div>
                        </div>
                        <button id="ssClear" class="btn btn-sm btn-danger"><i class="fa-solid fa-xmark"></i> Clear</button>
                    </div>
                `);

            const lockedCols = [0, 22];

            function buildSearchColumns() {
                const headers = table.columns().header();
                let html = '';
                table.columns().every(function (idx) {
                    // Corrected logic to check isAdmin status properly
                    if (idx === 22 && !(@isAdmin.ToString().ToLower() === 'true')) {
                        return;
                    }

                    const title = ($(headers[idx]).text() || '').trim() || `Column ${idx}`;
                    const disabled = lockedCols.includes(idx);
                    const defaultChecked = [1, 3, 4, 5, 6, 7, 8, 16, 17, 18, 19].includes(idx) && !disabled;
                    const exactable = EXACTABLE_COLS.includes(idx);
                    html += `
                        <div class="d-flex align-items-center justify-content-between">
                            <div class="form-check m-0">
                                <input class="form-check-input ss-col" type="checkbox" value="${idx}" id="ss-${idx}"
                                       ${disabled ? 'disabled' : ''} ${defaultChecked ? 'checked' : ''}>
                                <label class="form-check-label" for="ss-${idx}">${title}</label>
                            </div>
                            ${exactable ? `
                                <div class="form-check form-switch m-0 ms-2">
                                    <input class="form-check-input ss-exact" type="checkbox" data-col="${idx}" id="sx-${idx}">
                                    <label class="form-check-label small" for="sx-${idx}">Exact</label>
                                </div>` : ''}
                        </div>`;
                });
                $('#ssCols').html(html);
                syncExactEnabled();
            }
            buildSearchColumns();

            function syncExactEnabled() {
                $('#ssCols .ss-col').each(function () {
                    const idx = +this.value;
                    const $ex = $(`#sx-${idx}`);
                    if ($ex.length) {
                        const enabled = this.checked && !this.disabled;
                        $ex.prop('disabled', !enabled);
                        if (!enabled) $ex.prop('checked', false);
                    }
                });
            }

            let smartFilterRef = null;

            function applySmartFilter() {
                const q = ($('#ssQuery').val() || '').trim().toLowerCase();

                if (smartFilterRef) {
                    $.fn.dataTable.ext.search = $.fn.dataTable.ext.search.filter(fn => fn !== smartFilterRef);
                    smartFilterRef = null;
                }

                if (!q) { table.draw(); return; }

                const cols = $('#ssCols .ss-col:checked').map((_, el) => parseInt(el.value, 10)).get();
                const exactCols = $('#ssCols .ss-exact:checked').map((_, el) => parseInt(el.dataset.col, 10)).get();

                smartFilterRef = function (_settings, rowData) {
                    for (const c of cols) {
                        const cell = (rowData[c] ?? '').toString().trim().toLowerCase();
                        const isExact = exactCols.includes(c);
                        if (isExact ? (cell === q) : cell.includes(q)) return true;
                    }
                    return false;
                };

                $.fn.dataTable.ext.search.push(smartFilterRef);
                table.draw();
            }

            $('#smartSearch').on('keyup change', '#ssQuery', applySmartFilter);
            $('#smartSearch').on('change', '.ss-col', function () {
                syncExactEnabled();
                applySmartFilter();
            });
            $('#smartSearch').on('change', '.ss-exact', applySmartFilter);
            $('#smartSearch').on('click', '#ssClear', function () {
                $('#ssQuery').val('');
                applySmartFilter();
            });
            $('#smartSearch').on('click', '#ssCheckAll', function () {
                $('#ssCols .ss-col:not(:disabled)').prop('checked', true);
                syncExactEnabled();
                applySmartFilter();
            });
            $('#smartSearch').on('click', '#ssUncheckAll', function () {
                $('#ssCols .ss-col:not(:disabled)').prop('checked', false);
                syncExactEnabled();
                applySmartFilter();
            });
        });
    </script>
}

<div class="modal fade" id="rowDetailModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">รายละเอียด</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-sm table-bordered mb-0" id="rowDetailTable">
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

